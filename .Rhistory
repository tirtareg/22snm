}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
n <- 1000
p <- NULL
y <- NULL
for (i in (1:n)){
x <- sample(1:6, 1, replace = T)
y <- c(y, x)
a <- length(y[y==1])/i
p <- c(p, a)
}
p <- data.frame(x = 1:n, y = p)
fig <- plot_ly(p, x = ~x, y = ~y, type = 'scatter', mode = 'lines') %>%
layout(title = paste("Proporsi Kumulatif Lemparan Dadu", n, "kali"),
xaxis = list(title = "Banyaknya Lemparan"),
yaxis = list (title = "Proporsi Kumulatif"))
fig
update.packages(ask = F)
library(readxl)
library(tidyverse)
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update")
file <- list.files()
file
file <- file[1:7]
file
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(file[i])
data <- rbind(data, raw)
}
data <- data.frame(lapply(data, as.character))
data <- data %>% replace( ., is.na(.), "-")
dim(data)
names(data)
head(data)
write.csv(data, file = "update_dos_pns.csv", row.names = F)
library(readxl)
library(tidyverse)
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update")
file <- list.files()
file
file <- file[1:7]
file
data <- NULL
for (i in 1:length(file)) {
raw <- read_excel(file[i])
data <- rbind(data, raw)
}
data <- data.frame(lapply(data, as.character))
data <- data %>% replace( ., is.na(.), "-")
dim(data)
names(data)
head(data)
write.csv(data, file = "update_dos_pns.csv", row.names = F)
setwd("~/")
update.packages(ask = F, checkBuilt = T)
library(yaml)
remove.packages("yaml", lib="~/R/win-library/4.1")
install.packages("yaml", dependencies = T)
install.packages("yaml", dependencies = T)
update.packages(ask = F, checkBuilt = T)
q()
update.packages(ask = F, checkBuilt = T)
library(yaml)
remove.packages("yaml", lib="~/R/win-library/4.1")
install.packages("yaml", dependencies = T)
install.packages("yaml", dependencies = T)
update.packages(ask = F, checkBuilt = T)
q()
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3)
library(dplyr)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
group_by(Species) %>%
mutate(A = mean(Sepal.Length*Sepal.Width))
View(iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
group_by(Species) %>%
mutate(A = mean(Sepal.Length*Sepal.Width)))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
group_by(Species) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
group_by(Species) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Petal.Area = mean(Sepal.Area),
Sepal.Area = mean(Petal.Ares))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Petal.Area = mean(Sepal.Area),
Sepal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Sepal.Area = mean(Sepal.Area),
Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
summary(iris)
iris %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Length * Sepal.Width),
Mean.Petal.Area = mean(Petal.Length *  Petal.Width))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>% head(6) %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Sepal.Area = mean(Sepal.Area),
Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Sepal.Area = mean(Sepal.Area),
Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
update.packages(ask = F,checkBuilt = T)
library(rlang)
remove.packages("rlang", lib="~/R/win-library/4.1")
install.packages("rlang", dependencies = T)
install.packages("rlang", dependencies = T)
remove.packages("glue", lib="~/R/win-library/4.1")
install.packages("glue", dependencies = T)
remove.packages("xfun", lib="~/R/win-library/4.1")
install.packages("xfun", dependencies = T)
remove.packages("magrittr", lib="~/R/win-library/4.1")
install.packages("magrittr", dependencies = T)
remove.packages("fansi", lib="~/R/win-library/4.1")
install.packages("fansi", dependencies = T)
update.packages(ask = F, checkBuilt = T)
q()
library(matlib)
A <- matrix(sample(1:10,16,replace = T), ncol = 4)
A <- matrix(c(1,3,1,2,0,3,1,2,4), ncol = 3)
A
rank(A)
minor(A)
minor(A, 1, 1)
cofactor(A, 2, 3)
adjoint(A)
1/det(A)*adjoint(A)
solve(A)
dim(A)
nrow(A)
Minor <- function(A){
if (nrow(A) != ncol(A)) {
"Bukan Matriks Persegi"
} else {
m <- matrix(NA, ncol = ncol(A), nrow = nrow(A))
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
m[i,j] <- minor(A, i, j)
}
}
m
}
}
Kofaktor <- function(A){
if (nrow(A) != ncol(A)) {
"Bukan Matriks Persegi"
} else {
m <- matrix(NA, ncol = ncol(A), nrow = nrow(A))
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
m[i,j] <- (-1)^(i+j)*minor(A, i, j)
}
}
m
}
}
Minor(A)
Kofaktor(A)
adjoint(A)
echelon(A)
R(A)
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
B <- matrix(c(2,1,1,-1-3,2,1,1,-1,6,-2,3), nrow = 3)
B
B
B <- matrix(c(2,1,1,-1-3,2,1,1,-1,6,-2,3), nrow = 3)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
c <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C
det(C)
Ginv(C)
Ginv(C, fractions = T)
Ginv(C, fractions = T) %*% C
Ginv(C, fractions = T) %*% C %*% Ginv(C, fractions = T)
C %*% Ginv(C, fractions = T) %*% C
echelon(C)
R(C)
A <- matrix(c(2, 1, -1,
-3, -1, 2,
-2, 1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)
echelon(A, b, verbose=TRUE, fractions=TRUE) # reduced row-echelon form
echelon(A, b, reduced=FALSE, verbose=TRUE, fractions=TRUE) # row-echelon for
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
C <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C
det(C)
echelon(C)
R(C)
Ginv(C, fractions = T)
G <- Ginv(C, fractions = T)
C %*% G %*% C
G <- matrix(c(0, 5/3, -1/3,
0, -2/3, 1/3,
0, 0, 0), nrow = 3)
C
C %*% G %*% C
G <- matrix(c(0, 5/3, -1/3,
0, -2/3, 1/3,
0, 0, 0), nrow = 3)
C
C %*% G %*% C
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
R(A)
R(B)
C <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C
det(C)
echelon(C)
R(C)
G <- Ginv(C, fractions = T)
G
C %*% G %*% C
G <- matrix(c(0, 5/3, -1/3,
0, -2/3, 1/3,
0, 0, 0), nrow = 3)
C
C %*% G %*% C
A <- matrix(c(2, 1, -1,
-3, -1, 2,
-2, 1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)
echelon(A, b, verbose=TRUE, fractions=TRUE) # reduced row-echelon form
echelon(A, b, reduced=FALSE, verbose=TRUE, fractions=TRUE) # row-echelon for
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B, reduced = F)
echelon(B, reduced = F, fractions = T)
echelon(B, reduced = F)
echelon(B)
echelon(B, reduced = F) # matriks echelon baris
R(B)
A <- matrix(c(2, 1, -1,
-3, -1, 2,
-2, 1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)
echelon(A, b, verbose=TRUE, fractions=TRUE) # reduced row-echelon form
echelon(A, b, reduced=FALSE, verbose=TRUE, fractions=TRUE) # row-echelon for
echelon(cbind(A, b))
echelon(cbind(A, b), reduced = F)
echelon(cbind(A, b), reduced = F, fractions = T)
echelon(cbind(A, b), reduced = F, fractions = T, verbose = T)
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
echelon(A, reduced = F)
echelon(A, reduced = F, verbose = T)
echelon(A, reduced = F, verbose = T, fractions = T)
echelon(A, reduced = T, verbose = T, fractions = T)
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)  # matriks echelon baris tereduksi
echelon(B, reduced = F) # matriks echelon baris
echelon(B, reduced = T, verbose = T)
echelon(B, reduced = T, verbose = T, fractions = T) # matriks echelon baris tereduksi dan langkah2nya
A <- matrix(c(1-, 1, -1,
3, -3, 3,
5, -5, 5), nrow = 3)
A <- matrix(c(1-, 1, -1,
3, -3, 3,
5, -5, 5), nrow = 3)
A <- matrix(c(1-, 1, -1, 3, -3, 3, 5, -5, 5), nrow = 3)
A <- matrix(c(-1, 1, -1,
3, -3, 3,
5, -5, 5), nrow = 3)
echelon(A)
echelon(A)  # matriks echelon baris tereduksi
echelon(A, reduced = F) # matriks echelon baris
echelon(A, reduced = T, verbose = T, fractions = T) # matriks echelon baris tereduksi dan langkah2nya
R(B)
R(A)
vol-a <- 2
vol_a <- 2
2name_45 <- c(1:5)
name <- 4
2name <- 4
.nam <- 1
.name2 <- 3
.2name <- 3
_h <- 3
-h <- 45
vol-kubus <- 3
setwd("G:/My Drive/#PMB/2022/01_SNMPTN/21snm")
