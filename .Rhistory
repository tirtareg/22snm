# B31(3)
A <- ob(A,3,1,3); A
# B2(1/8)
A <- kb(A,2,1/8); A
A <- ob(A,3,2,2); A
A <- ob(A,1,2,2); A
A <- kb(A,3,1/A[3,3]); A
A <- ob(A,2,3,-A[2,3]); A
A <- ob(A,1,3,-A[1,3]); A
fractions(A)
A <- fractions(A)
class(A)
A <- as.matrix(fractions(A))
class(A)
A <- matrix(fractions(A))
class(A)
A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
A[1,] <- A[1,]/2
A
class(A)
A
fractions(A)
B<-fractions(A)
class(B)
B[2,] <- B[2, ]/3
B
class(B)
B[3,] <- B[3, ]/5
B
class(B)
B<-fractions(B)
B
class(B)
B$1
str(B)
is.fractions(B)
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else
A[i, ] <- fractions(A[i, ] * k)
A
}
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else
A[i, ] <- A[i, ] + fractions(A[j, ] * k)
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
is.fractions(A)
fractions(A[1,] <- A[1,]/8)
A
is.fractions(A)
A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
A[1,] <- fractions(A[1,]/8)
A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
A[1,] <- A[1,]/8
A <- fractions(A)
A
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else
A[i, ] <- A[i, ] * k
A <- fractions(A)
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else
A[i, ] <- A[i, ] + A[j, ] * k
A <- fractions(A)
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else
A[i, ] <- A[i, ] * k
A <- fractions(A)
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
is.fractions(A)
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
# B31(3)
A <- ob(A,3,1,3); A
# B2(1/8)
A <- kb(A,2,1/8); A
A <- ob(A,3,2,2); A
A <- ob(A,1,2,2); A
A <- kb(A,3,1/A[3,3]); A
A <- ob(A,2,3,-A[2,3]); A
A <- ob(A,1,3,-A[1,3]); A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3)
A
library(matlib)
R(A)
echelon(A)
echelon(A, reduced = F)
echelon(A, reduced = T, fractions = T)
echelon(A, reduced = T, verbose = T, fractions = T)
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
library(MASS)
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
# B31(3)
A <- ob(A,3,1,3); A
# B2(1/8)
A <- kb(A,2,1/8); A
A <- ob(A,3,2,2); A
A <- ob(A,1,2,2); A
A <- kb(A,3,1/A[3,3]); A
A <- ob(A,2,3,-A[2,3]); A
A <- ob(A,1,3,-A[1,3]); A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3)
echelon(A, reduced = T, verbose = T, fractions = T)
library(matlib)
A <- matrix(c(4,1,3,
1,1,1,
2,5,3), nrow = 3)
A
Ginv(A)
fractions(Ginv(A))
A %*% Ginv(A) %*% A
A %*% fractions(Ginv(A)) %*% A
A <- matrix(c(2,1,1,
-1,-3,2,
1,1,-1,
6,-2,3), nrow = 3)
A
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
A
A <- tb(A,1,2); A
A <- ob(A,2,1,-2); A
# B31(-1)
A <- ob(A,3,1,-1) ;A
# B32(-1)
A <- ob(A,3,2,-1); A
A <- kb(A,2,1/5) ;A
A <- kb(A,3,-1); A
A <- kb(A,2,3,1/5); A
A <- matrix(c(2,1,1,
-1,-3,2,
1,1,-1,
6,-2,3), nrow = 3)
A
# B12
A <- tb(A,1,2); A
A <- ob(A,2,1,-2); A
# B31(-1)
A <- ob(A,3,1,-1) ;A
# B32(-1)
A <- ob(A,3,2,-1); A
A <- kb(A,2,1/5) ;A
A <- kb(A,3,-1); A
A <- kb(A,2,3,1/5); A
A <- ob(A,2,3,1/5); A
A <- ob(A,1,2,3); A
A <- ob(A1,3,-1); A
A <- ob(A,1,3,-1); A
echelon(A, reduced = T, verbose = T)
echelon(A, reduced = T, verbose = T, fractions = T)
A <- matrix(c(2,1,1,
-1,-3,2,
1,1,-1,
6,-2,3), nrow = 3)
echelon(A, reduced = T, verbose = T, fractions = T)
ob <- function(A,i,j,k){
if (MASS::is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- MASS::fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
kb <- function(A, i, k){
if (MASS::is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- MASS::fractions(A)}
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
# B31(3)
A <- ob(A,3,1,3); A
# B2(1/8)
A <- kb(A,2,1/8); A
A <- ob(A,3,2,2); A
A <- ob(A,1,2,2); A
A <- kb(A,3,1/A[3,3]); A
A <- ob(A,2,3,-A[2,3]); A
A <- ob(A,1,3,-A[1,3]); A
A <- matrix(sample(1:10, 25, replace = T), nrow = 5);A
A <- ob(A,2,1,-6);A
A <- ob(A,3,1,-3);A
A <- ob(A,4,1,-10);A
A <- ob(A,5,1,-6);A
A <- kb(A,2,-1/33);A
A <- ob(A,3,2,12);A
A <- ob(A,4,2,53);A
A <- ob(A,5,2,28);A
A <- kb(A,3,-11/48);A
A <- ob(A,4,3,427/33);A
A <- ob(A,5,3,17/33);A
A <- kb(A,4,49/983);A
A <- kb(A,4,48/49);A
A <- ob(A,5,4,59/48);A
A <- kb(A,5,-983/1313);A
A <- ob(A,4,5,89/2949);A
A <- ob(A,3,5,-23/48);A
A <- ob(A,2,5,1/11);A
A <- ob(A,1,5,-1);A
A <- ob(A,3,4,-23/16);A
A <- ob(A,2,4,-46/33);A
A <- ob(A,1,4,-8);A
A <- ob(A,2,3,-10/33);A
A <- ob(A,1,3,-3);A
A <- ob(A,1,2,-6);A
A <- matrix(c(4,1,3,
1,1,1,
2,5,3), nrow = 3, byrow = T)
A
echelon(A)  # matriks echelon baris tereduksi
library(matlib)
echelon(A)  # matriks echelon baris tereduksi
MASS::fractions(echelon(A))  # matriks echelon baris tereduksi
echelon(A, reduced = F) # matriks echelon baris
echelon(A, reduced = T, verbose = T, fractions = T) # matriks echelon baris tereduksi dan langkah2nya
det(A)
Solve(A)
solve(A)
Ginv(A)
A %*% Ginv(A) %*% A
library(dplyr)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Length * Sepal.Width),
Mean.Petal.Area = mean(Petal.Length * Petal.Width))
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6 -> rec5 -> rec4 -> rec2
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6 -> rec5 -> rec4 -> rec1
}")
library(DiagrammeR)
?grViz
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6 -> rec5 -> rec4 -> rec1
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3)
A
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
ob <- function(A,i,j,k){
if (MASS::is.fractions(A) == TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- MASS::fractions(A) }
A
}
kb <- function(A, i, k){
if (MASS::is.fractions(A) == TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- MASS::fractions(A)}
A
}
A
A <- kb(A,1,1/2); A
A <- ob(A,2,1,-3); A
A <- ob(A,3,1,3); A
A <- ob(A,3,2,1/4); A
A <- kb(A,2,1/8); A
A <- kb(A,3,8/115); A
A <- ob(A,2,3,16/9); A
A <- ob(A,2,3,-175/144); A
A <- ob(A,1,3,-7/2); A
A <- ob(A,1,2,2); A
setwd("G:/My Drive/#PMB/2022/01_SNMPTN/21snm")
paste("nama", \n , "saya")
paste("nama", \n "saya")
paste("nama", \n saya")
paste("nama", "\n saya")
